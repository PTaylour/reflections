*What happens when you initialize a repository? Why do you need to do it?*
- creates the .git file which holds all the repo info


*How is the staging area different from the working directory and the repository? What value do you think it offers?*
- no files like the working directory, no commits like the respository. 
- space to organise what will make up the next commit
- allows you to craft a commit into something meaningful

_How can you use the staging area to make sure you have one commit per logical change?_
- the staging area lets you choose which files are commited in a commit. 
- you can add to the staging area only the files that have changes that together account to one
logical change

_What are some situations when branches would be helpful in keeping your history organized? How would branches help?_
- a new experimental feature
- I don't need to checkout a branch I could just leave it inline. eg git branch backup
	- this would allow me to switch back to a particular commit behind master using git checkout backup
- if every feature or bug fix has a new branch you get some benifit
	- people can work on a feature without interuption from changes to master
	- if you want to do something else. or fix a bug you can switch back to the approperaite branch


_How do the diagrams help you visualize the branch structure?_
- you can see which commits are reachabable and who the parent to each it
